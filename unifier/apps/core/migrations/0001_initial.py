# Generated by Django 3.1.6 on 2021-02-13 17:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=256, verbose_name='Manga title')),
                ('year', models.PositiveIntegerField(verbose_name='Launch year')),
                ('chapters_count', models.PositiveIntegerField(default=0, verbose_name='Chapters count')),
                ('author', models.CharField(blank=True, max_length=128, null=True, verbose_name='Author name')),
                ('description', models.CharField(blank=True, max_length=128, null=True, verbose_name='Manga description')),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=2, null=True, verbose_name='Manga rate')),
                ('cover', models.URLField(blank=True, max_length=128, null=True, verbose_name='Cover URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Novel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=256, verbose_name='Novel title')),
                ('year', models.PositiveIntegerField(verbose_name='Launch year')),
                ('chapters_count', models.PositiveIntegerField(default=0, verbose_name='Chapters count')),
                ('author', models.CharField(blank=True, max_length=128, null=True, verbose_name='Author name')),
                ('description', models.CharField(blank=True, max_length=128, null=True, verbose_name='Novel description')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=2, verbose_name='Novel rate')),
                ('cover', models.URLField(blank=True, max_length=128, null=True, verbose_name='Cover URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(max_length=128, verbose_name='Platform URL')),
                ('name', models.CharField(max_length=128, verbose_name='Platform Name')),
                ('url_search', models.URLField(max_length=128, verbose_name='Platform search URL')),
                ('mangas', models.ManyToManyField(related_name='platform', to='core.Manga')),
                ('novels', models.ManyToManyField(related_name='platform', to='core.Novel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NovelChapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.PositiveIntegerField(verbose_name='Chapter number')),
                ('title', models.CharField(max_length=256, verbose_name='Chapter title')),
                ('language', models.PositiveSmallIntegerField(choices=[(0, 'English Us'), (1, 'Portuguese Br')], default=1, verbose_name='Chapter language')),
                ('body', models.TextField()),
                ('novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='novel_chapters', to='core.novel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MangaChapter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.PositiveIntegerField(verbose_name='Chapter number')),
                ('title', models.CharField(max_length=256, verbose_name='Chapter title')),
                ('language', models.PositiveSmallIntegerField(choices=[(0, 'English Us'), (1, 'Portuguese Br')], default=1, verbose_name='Chapter language')),
                ('manga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manga_chapters', to='core.manga')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('path', models.URLField(max_length=128, verbose_name='Image path URL')),
                ('url', models.URLField(max_length=128, verbose_name='Image URL')),
                ('manga_chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.mangachapter')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
